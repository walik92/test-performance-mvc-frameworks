var app=app||{};!function(){"use strict";app.Utils={uuid:function(){var r,t,n="";for(r=0;r<32;r++)t=16*Math.random()|0,8!==r&&12!==r&&16!==r&&20!==r||(n+="-"),n+=(12===r?4:16===r?3&t|8:t).toString(16);return n},pluralize:function(r,t){return 1===r?t:t+"s"},store:function(r,t){if(t)return localStorage.setItem(r,JSON.stringify(t));var n=localStorage.getItem(r);return n&&JSON.parse(n)||[]},extend:function(){for(var r={},t=0;t<arguments.length;t++){var n=arguments[t];for(var e in n)n.hasOwnProperty(e)&&(r[e]=n[e])}return r}}}();
var app=app||{};!function(){"use strict";var o=app.Utils;app.TodoModel=function(t){this.key=t,this.todos=o.store(t),this.onChanges=[]},app.TodoModel.prototype.subscribe=function(o){this.onChanges.push(o)},app.TodoModel.prototype.inform=function(){o.store(this.key,this.todos),this.onChanges.forEach(function(o){o()})},app.TodoModel.prototype.addTodo=function(t){this.todos=this.todos.concat({id:o.uuid(),title:t,completed:!1}),this.inform()},app.TodoModel.prototype.toggleAll=function(t){this.todos=this.todos.map(function(e){return o.extend({},e,{completed:t})}),this.inform()},app.TodoModel.prototype.toggle=function(t){this.todos=this.todos.map(function(e){return e!==t?e:o.extend({},e,{completed:!e.completed})}),this.inform()},app.TodoModel.prototype.destroy=function(o){this.todos=this.todos.filter(function(t){return t!==o}),this.inform()},app.TodoModel.prototype.save=function(t,e){this.todos=this.todos.map(function(i){return i!==t?i:o.extend({},i,{title:e})}),this.inform()},app.TodoModel.prototype.clearCompleted=function(){this.todos=this.todos.filter(function(o){return!o.completed}),this.inform()}}();
var app=app||{};!function(){"use strict";app.TodoItem=React.createClass({displayName:"TodoItem",handleSubmit:function(t){var e=this.state.editText.trim();e?(this.props.onSave(e),this.setState({editText:e})):this.props.onDestroy()},handleEdit:function(){this.props.onEdit(function(){var t=this.refs.editField.getDOMNode();t.focus(),t.setSelectionRange(t.value.length,t.value.length)}.bind(this)),this.setState({editText:this.props.todo.title})},handleKeyDown:function(t){27===t.which?(this.setState({editText:this.props.todo.title}),this.props.onCancel(t)):13===t.which&&this.handleSubmit(t)},handleChange:function(t){this.setState({editText:t.target.value})},getInitialState:function(){return{editText:this.props.todo.title}},shouldComponentUpdate:function(t,e){return t.todo!==this.props.todo||t.editing!==this.props.editing||e.editText!==this.state.editText},render:function(){return React.createElement("li",{className:React.addons.classSet({completed:this.props.todo.completed,editing:this.props.editing})},React.createElement("div",{className:"view"},React.createElement("input",{className:"toggle",type:"checkbox",checked:this.props.todo.completed,onChange:this.props.onToggle}),React.createElement("label",{onDoubleClick:this.handleEdit},this.props.todo.title),React.createElement("button",{className:"destroy",onClick:this.props.onDestroy})),React.createElement("input",{ref:"editField",className:"edit",value:this.state.editText,onBlur:this.handleSubmit,onChange:this.handleChange,onKeyDown:this.handleKeyDown}))}})}();
var app=app||{};!function(){"use strict";app.TodoFooter=React.createClass({displayName:"TodoFooter",render:function(){var e=app.Utils.pluralize(this.props.count,"item"),t=null;this.props.completedCount>0&&(t=React.createElement("button",{id:"clear-completed",onClick:this.props.onClearCompleted},"Clear completed (",this.props.completedCount,")"));var a=React.addons.classSet,l=this.props.nowShowing;return React.createElement("footer",{id:"footer"},React.createElement("span",{id:"todo-count"},React.createElement("strong",null,this.props.count)," ",e," left"),React.createElement("ul",{id:"filters"},React.createElement("li",null,React.createElement("a",{href:"#/",className:a({selected:l===app.ALL_TODOS})},"All"))," ",React.createElement("li",null,React.createElement("a",{href:"#/active",className:a({selected:l===app.ACTIVE_TODOS})},"Active"))," ",React.createElement("li",null,React.createElement("a",{href:"#/completed",className:a({selected:l===app.COMPLETED_TODOS})},"Completed"))),t)}})}();
var app=app||{};!function(){"use strict";function e(){React.render(React.createElement(n,{model:i}),document.getElementById("todoapp"))}app.ALL_TODOS="all",app.ACTIVE_TODOS="active",app.COMPLETED_TODOS="completed";var t=app.TodoFooter,o=app.TodoItem,n=React.createClass({displayName:"TodoApp",getInitialState:function(){return{nowShowing:app.ALL_TODOS,editing:null}},componentDidMount:function(){var e=this.setState;Router({"/":e.bind(this,{nowShowing:app.ALL_TODOS}),"/active":e.bind(this,{nowShowing:app.ACTIVE_TODOS}),"/completed":e.bind(this,{nowShowing:app.COMPLETED_TODOS})}).init("/")},handleNewTodoKeyDown:function(e){if(13===e.which){e.preventDefault();var t=this.refs.newField.getDOMNode().value.trim();t&&(this.props.model.addTodo(t),this.refs.newField.getDOMNode().value="")}},toggleAll:function(e){var t=e.target.checked;this.props.model.toggleAll(t)},toggle:function(e){this.props.model.toggle(e)},destroy:function(e){this.props.model.destroy(e)},edit:function(e,t){this.setState({editing:e.id},function(){t()})},save:function(e,t){this.props.model.save(e,t),this.setState({editing:null})},cancel:function(){this.setState({editing:null})},clearCompleted:function(){this.props.model.clearCompleted()},render:function(){var e,n,i=this.props.model.todos,a=i.filter(function(e){switch(this.state.nowShowing){case app.ACTIVE_TODOS:return!e.completed;case app.COMPLETED_TODOS:return e.completed;default:return!0}},this),d=a.map(function(e){return React.createElement(o,{key:e.id,todo:e,onToggle:this.toggle.bind(this,e),onDestroy:this.destroy.bind(this,e),onEdit:this.edit.bind(this,e),editing:this.state.editing===e.id,onSave:this.save.bind(this,e),onCancel:this.cancel})},this),l=i.reduce(function(e,t){return t.completed?e:e+1},0),c=i.length-l;return(l||c)&&(e=React.createElement(t,{count:l,completedCount:c,nowShowing:this.state.nowShowing,onClearCompleted:this.clearCompleted})),i.length&&(n=React.createElement("section",{id:"main"},React.createElement("input",{id:"toggle-all",type:"checkbox",onChange:this.toggleAll,checked:0===l}),React.createElement("ul",{id:"todo-list"},d))),React.createElement("div",null,React.createElement("header",{id:"header"},React.createElement("h1",null,"todos"),React.createElement("input",{ref:"newField",id:"new-todo",placeholder:"What needs to be done?",onKeyDown:this.handleNewTodoKeyDown,autoFocus:!0})),n,e)}}),i=new app.TodoModel("react-todos");i.subscribe(e),e()}();