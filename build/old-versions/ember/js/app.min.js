window.Todos=Ember.Application.create(),Todos.ApplicationAdapter=DS.LSAdapter.extend({namespace:"todos-emberjs"});
!function(){"use strict";Todos.Router.map(function(){this.resource("todos",{path:"/"},function(){this.route("active"),this.route("completed")})}),Todos.TodosRoute=Ember.Route.extend({model:function(){return this.store.find("todo")}}),Todos.TodosIndexRoute=Todos.TodosRoute.extend({templateName:"todo-list",controllerName:"todos-list"}),Todos.TodosActiveRoute=Todos.TodosIndexRoute.extend({model:function(){return this.store.filter("todo",function(todo){return!todo.get("isCompleted")})}}),Todos.TodosCompletedRoute=Todos.TodosIndexRoute.extend({model:function(){return this.store.filter("todo",function(todo){return todo.get("isCompleted")})}})}();
!function(){"use strict";Todos.Todo=DS.Model.extend({title:DS.attr("string"),isCompleted:DS.attr("boolean")})}();
!function(){"use strict";Todos.TodosController=Ember.ArrayController.extend({actions:{createTodo:function(){var title,todo;(title=this.get("newTitle").trim())&&(todo=this.store.createRecord("todo",{title:title,isCompleted:!1}),todo.save(),this.set("newTitle",""))},clearCompleted:function(){var completed=this.get("completed");completed.invoke("deleteRecord"),completed.invoke("save")}},remaining:Ember.computed.filterBy("model","isCompleted",!1),completed:Ember.computed.filterBy("model","isCompleted",!0),allAreDone:function(key,value){if(void 0!==value)return this.setEach("isCompleted",value),value;var length=this.get("length"),completedLength=this.get("completed.length");return length>0&&length===completedLength}.property("length","completed.length")})}();
!function(){"use strict";Todos.TodosListController=Ember.ArrayController.extend({needs:["todos"],allTodos:Ember.computed.alias("controllers.todos"),itemController:"todo",canToggle:function(){var anyTodos=this.get("allTodos.length"),isEditing=this.isAny("isEditing");return anyTodos&&!isEditing}.property("allTodos.length","@each.isEditing")})}();
!function(){"use strict";Todos.TodoController=Ember.ObjectController.extend({isEditing:!1,bufferedTitle:Ember.computed.oneWay("title"),actions:{editTodo:function(){this.set("isEditing",!0)},doneEditing:function(){var bufferedTitle=this.get("bufferedTitle").trim();if(Ember.isEmpty(bufferedTitle))Ember.run.debounce(this,"removeTodo",0);else{var todo=this.get("model");todo.set("title",bufferedTitle),todo.save()}this.set("bufferedTitle",bufferedTitle),this.set("isEditing",!1)},cancelEditing:function(){this.set("bufferedTitle",this.get("title")),this.set("isEditing",!1)},removeTodo:function(){this.removeTodo()}},removeTodo:function(){var todo=this.get("model");todo.deleteRecord(),todo.save()},saveWhenCompleted:function(){this.get("model").save()}.observes("isCompleted")})}();
!function(){"use strict";Todos.TodoInputComponent=Ember.TextField.extend({focusOnInsert:function(){this.$().val(this.$().val()),this.$().focus()}.on("didInsertElement")})}();
!function(){"use strict";Ember.Handlebars.helper("pluralize",function(singular,count){var inflector=Ember.Inflector.inflector;return 1===count?singular:inflector.pluralize(singular)})}();