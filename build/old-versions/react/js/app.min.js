var app=app||{};!function(){"use strict";app.Utils={uuid:function(){var i,random,uuid="";for(i=0;i<32;i++)random=16*Math.random()|0,8!==i&&12!==i&&16!==i&&20!==i||(uuid+="-"),uuid+=(12===i?4:16===i?3&random|8:random).toString(16);return uuid},pluralize:function(count,word){return 1===count?word:word+"s"},store:function(namespace,data){if(data)return localStorage.setItem(namespace,JSON.stringify(data));var store=localStorage.getItem(namespace);return store&&JSON.parse(store)||[]},extend:function(){for(var newObj={},i=0;i<arguments.length;i++){var obj=arguments[i];for(var key in obj)obj.hasOwnProperty(key)&&(newObj[key]=obj[key])}return newObj}}}();
var app=app||{};!function(){"use strict";var Utils=app.Utils;app.TodoModel=function(key){this.key=key,this.todos=Utils.store(key),this.onChanges=[]},app.TodoModel.prototype.subscribe=function(onChange){this.onChanges.push(onChange)},app.TodoModel.prototype.inform=function(){Utils.store(this.key,this.todos),this.onChanges.forEach(function(cb){cb()})},app.TodoModel.prototype.addTodo=function(title){this.todos=this.todos.concat({id:Utils.uuid(),title:title,completed:!1}),this.inform()},app.TodoModel.prototype.toggleAll=function(checked){this.todos=this.todos.map(function(todo){return Utils.extend({},todo,{completed:checked})}),this.inform()},app.TodoModel.prototype.toggle=function(todoToToggle){this.todos=this.todos.map(function(todo){return todo!==todoToToggle?todo:Utils.extend({},todo,{completed:!todo.completed})}),this.inform()},app.TodoModel.prototype.destroy=function(todo){this.todos=this.todos.filter(function(candidate){return candidate!==todo}),this.inform()},app.TodoModel.prototype.save=function(todoToSave,text){this.todos=this.todos.map(function(todo){return todo!==todoToSave?todo:Utils.extend({},todo,{title:text})}),this.inform()},app.TodoModel.prototype.clearCompleted=function(){this.todos=this.todos.filter(function(todo){return!todo.completed}),this.inform()}}();
var app=app||{};!function(){"use strict";app.TodoItem=React.createClass({displayName:"TodoItem",handleSubmit:function(event){var val=this.state.editText.trim();val?(this.props.onSave(val),this.setState({editText:val})):this.props.onDestroy()},handleEdit:function(){this.props.onEdit(function(){var node=this.refs.editField.getDOMNode();node.focus(),node.setSelectionRange(node.value.length,node.value.length)}.bind(this)),this.setState({editText:this.props.todo.title})},handleKeyDown:function(event){27===event.which?(this.setState({editText:this.props.todo.title}),this.props.onCancel(event)):13===event.which&&this.handleSubmit(event)},handleChange:function(event){this.setState({editText:event.target.value})},getInitialState:function(){return{editText:this.props.todo.title}},shouldComponentUpdate:function(nextProps,nextState){return nextProps.todo!==this.props.todo||nextProps.editing!==this.props.editing||nextState.editText!==this.state.editText},render:function(){return React.createElement("li",{className:React.addons.classSet({completed:this.props.todo.completed,editing:this.props.editing})},React.createElement("div",{className:"view"},React.createElement("input",{className:"toggle",type:"checkbox",checked:this.props.todo.completed,onChange:this.props.onToggle}),React.createElement("label",{onDoubleClick:this.handleEdit},this.props.todo.title),React.createElement("button",{className:"destroy",onClick:this.props.onDestroy})),React.createElement("input",{ref:"editField",className:"edit",value:this.state.editText,onBlur:this.handleSubmit,onChange:this.handleChange,onKeyDown:this.handleKeyDown}))}})}();
var app=app||{};!function(){"use strict";app.TodoFooter=React.createClass({displayName:"TodoFooter",render:function(){var activeTodoWord=app.Utils.pluralize(this.props.count,"item"),clearButton=null;this.props.completedCount>0&&(clearButton=React.createElement("button",{id:"clear-completed",onClick:this.props.onClearCompleted},"Clear completed (",this.props.completedCount,")"));var cx=React.addons.classSet,nowShowing=this.props.nowShowing;return React.createElement("footer",{id:"footer"},React.createElement("span",{id:"todo-count"},React.createElement("strong",null,this.props.count)," ",activeTodoWord," left"),React.createElement("ul",{id:"filters"},React.createElement("li",null,React.createElement("a",{href:"#/",className:cx({selected:nowShowing===app.ALL_TODOS})},"All"))," ",React.createElement("li",null,React.createElement("a",{href:"#/active",className:cx({selected:nowShowing===app.ACTIVE_TODOS})},"Active"))," ",React.createElement("li",null,React.createElement("a",{href:"#/completed",className:cx({selected:nowShowing===app.COMPLETED_TODOS})},"Completed"))),clearButton)}})}();
var app=app||{};!function(){"use strict";function render(){React.render(React.createElement(TodoApp,{model:model}),document.getElementById("todoapp"))}app.ALL_TODOS="all",app.ACTIVE_TODOS="active",app.COMPLETED_TODOS="completed";var TodoFooter=app.TodoFooter,TodoItem=app.TodoItem,TodoApp=React.createClass({displayName:"TodoApp",getInitialState:function(){return{nowShowing:app.ALL_TODOS,editing:null}},componentDidMount:function(){var setState=this.setState;Router({"/":setState.bind(this,{nowShowing:app.ALL_TODOS}),"/active":setState.bind(this,{nowShowing:app.ACTIVE_TODOS}),"/completed":setState.bind(this,{nowShowing:app.COMPLETED_TODOS})}).init("/")},handleNewTodoKeyDown:function(event){if(13===event.which){event.preventDefault();var val=this.refs.newField.getDOMNode().value.trim();val&&(this.props.model.addTodo(val),this.refs.newField.getDOMNode().value="")}},toggleAll:function(event){var checked=event.target.checked;this.props.model.toggleAll(checked)},toggle:function(todoToToggle){this.props.model.toggle(todoToToggle)},destroy:function(todo){this.props.model.destroy(todo)},edit:function(todo,callback){this.setState({editing:todo.id},function(){callback()})},save:function(todoToSave,text){this.props.model.save(todoToSave,text),this.setState({editing:null})},cancel:function(){this.setState({editing:null})},clearCompleted:function(){this.props.model.clearCompleted()},render:function(){var footer,main,todos=this.props.model.todos,shownTodos=todos.filter(function(todo){switch(this.state.nowShowing){case app.ACTIVE_TODOS:return!todo.completed;case app.COMPLETED_TODOS:return todo.completed;default:return!0}},this),todoItems=shownTodos.map(function(todo){return React.createElement(TodoItem,{key:todo.id,todo:todo,onToggle:this.toggle.bind(this,todo),onDestroy:this.destroy.bind(this,todo),onEdit:this.edit.bind(this,todo),editing:this.state.editing===todo.id,onSave:this.save.bind(this,todo),onCancel:this.cancel})},this),activeTodoCount=todos.reduce(function(accum,todo){return todo.completed?accum:accum+1},0),completedCount=todos.length-activeTodoCount;return(activeTodoCount||completedCount)&&(footer=React.createElement(TodoFooter,{count:activeTodoCount,completedCount:completedCount,nowShowing:this.state.nowShowing,onClearCompleted:this.clearCompleted})),todos.length&&(main=React.createElement("section",{id:"main"},React.createElement("input",{id:"toggle-all",type:"checkbox",onChange:this.toggleAll,checked:0===activeTodoCount}),React.createElement("ul",{id:"todo-list"},todoItems))),React.createElement("div",null,React.createElement("header",{id:"header"},React.createElement("h1",null,"todos"),React.createElement("input",{ref:"newField",id:"new-todo",placeholder:"What needs to be done?",onKeyDown:this.handleNewTodoKeyDown,autoFocus:!0})),main,footer)}}),model=new app.TodoModel("react-todos");model.subscribe(render),render()}();